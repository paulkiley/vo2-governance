name: Reusable CI (Governance)

on:
  workflow_call:
    inputs:
      python-version:
        description: Python version to use
        type: string
        default: '3.11'

jobs:
  build-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install system tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq just zip
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install nox jinja2 pyyaml
      - name: Generate manifest (if available)
        run: |
          if [[ -f ./populate.sh ]]; then bash ./populate.sh; fi
      - name: Validate manifest (if nox session present)
        run: |
          if [[ -f ./noxfile.py ]]; then nox -s validate_manifest --error-on-missing-interpreters; else echo "No noxfile.py; skipping"; fi
      - name: Verify manifest matches sources (main only)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          if [[ -f ./verify.sh ]]; then bash ./verify.sh; else echo "No verify.sh; skipping"; fi

  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.9 black==24.8.0
      - name: Ruff (lint)
        run: |
          if git ls-files '*.py' | grep -q .; then ruff check .; else echo "No Python files"; fi
      - name: Black (format check)
        run: |
          if git ls-files '*.py' | grep -q .; then black --check .; else echo "No Python files"; fi

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit
      - name: Bandit
        run: |
          if git ls-files '*.py' | grep -q .; then bandit -r -q -x .venv,venv,.git .; else echo "No Python files"; fi
      - name: Gitleaks (secret scan)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --no-git --redact --source .

  lint-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Markdownlint
        uses: DavidAnson/markdownlint-cli2-action@v16
        with:
          globs: |
            **/*.md
      - name: Yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint.yml

  render-docs:
    runs-on: ubuntu-latest
    needs: [build-validate, lint-python, security-scan, lint-docs]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install jinja2 pyyaml
      - name: Render default docs (if present)
        run: |
          if [[ -f ./render.py && -f ./copier-defaults.yaml ]]; then \
            python3 ./render.py --context ./copier-defaults.yaml --out-dir ./_rendered --in-dir ./src/project_vo2_scaffolder/data_files/templates; \
          else echo "No renderer/context"; fi
      - name: Upload rendered docs
        if: hashFiles('_rendered/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: rendered-docs
          path: _rendered
